---

# Nomad user and group
nomad_user:  nomad
nomad_group: nomad

# Add the nomad user to the docker group
#  If the docker group exists, and `nomad_user_to_docker`
#  is set to true, then add the nomad_user to the docker
#  group. THIS WILL NOT CREATE THE docker GROUP !
#
nomad_docker_group: docker
nomad_user_to_docker: false

# Create the nomad user and group
nomad_create_user: true

nomad_version: 0.12.0

nomad_bin: /usr/local/bin/nomad
nomad_dest: "/opt/nomad/{{nomad_version}}"

# OS packages required
#  NOTE: If packages become more complex than this,
#  move things to vars/{{ansible_os_family}}.yml
nomad_packages:
  - zip
  - unzip

# get_url validate_certs
# In case you are running on an old python version
# you might want to toggle this to false if you get
# an error like 'Failed to validate the SSL certificate'
nomad_download_validate_certs: true

nomad_arch:     "{{ (ansible_architecture == 'x86_64') | ternary('amd64', 'i386') }}"
nomad_package:  "nomad_{{nomad_version}}_linux_{{nomad_arch}}.zip"
nomad_base_url: "https://releases.hashicorp.com/nomad/{{nomad_version}}"
nomad_url:      "{{nomad_base_url}}/{{nomad_package}}"
nomad_package_dest: /usr/local/src

# Start nomad at boot time
#
nomad_start_at_boot: True

# The following toggle will start nomad on a plabook execution
# or prevent it (even handlers).
# This might turn handy when building images that should have a
# clean start (nothing in the data dir)
nomad_started: true

# Config and data directories
#
nomad_config_dir: /etc/nomad.d
nomad_data_dir: /var/nomad

# Daemon options to be passed through nomad options file
# (/etc/default/nomad or /etc/sysconfig/nomad)
#
#nomad_daemon_options: ""

# nomad config
# nomad_config is a hash where the item key represents the
# config file name, and it's value is a json block (without the
# main curly brackets). This allows for flexible configuration
# like:
#
# nomad_config:
#
#
nomad_config: {}

# vi:ts=2:sw=2:et:ft=yaml
